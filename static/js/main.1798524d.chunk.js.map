{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","sortedGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","App","useState","NONE","setSortType","setIsReversed","isVisible","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAW,YAAOH,GAUxB,OARIC,IAAaJ,EAASO,UACxBD,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAGzCN,IAAaJ,EAASY,QACxBN,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGnCR,EACHC,EAAYQ,UACZR,G,SA5BDN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+BE,IAAMe,EAAgB,WAC3B,MAAgCC,mBAAShB,EAASiB,MAAlD,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBc,EAAnB,KACMC,EAAYhB,IAAaJ,EAASiB,OAAuB,IAAfZ,EAmBhD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYnB,IAAaJ,EAASO,WAEpCiB,QAzBe,WACrBN,EAAYlB,EAASO,WAmBjB,iCAUA,wBACEe,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYnB,IAAaJ,EAASY,SAEpCY,QA/Ba,WACnBN,EAAYlB,EAASY,SAyBjB,4BAUA,wBACEU,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAalB,IAEfmB,QArCc,WACpBL,GAAed,IA+BX,qBAUCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA1CI,WACZN,EAAYlB,EAASiB,MACrBE,GAAc,IAqCR,sBAWJ,6BACE,6BACGjB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAAAC,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCpHlDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1798524d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype OrderOptions = {\n  sortType: SortType,\n  isReversed : boolean,\n\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: OrderOptions,\n) {\n  const sortedGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    sortedGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    sortedGoods.sort((a, b) => a.length - b.length);\n  }\n\n  return isReversed\n    ? sortedGoods.reverse()\n    : sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const isVisible = sortType !== SortType.NONE || isReversed !== false;\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseSwitch = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverseSwitch}\n        >\n          Reverse\n        </button>\n\n        {isVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => (<li data-cy=\"Good\" key={good}>{good}</li>))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}